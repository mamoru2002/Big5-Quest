name: Deploy API to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: prod-deploy
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: SSH deploy
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: 22
          timeout: 30s
          command_timeout: 30m
          fingerprint: ${{ secrets.DEPLOY_HOST_FINGERPRINT }}
          script: |
            set -euo pipefail

            cd /opt/Big5-Quest

            # 1) Git 更新
            git fetch --prune
            git reset --hard origin/main

            # 2) systemd ユニット反映（あれば）
            if [ -f ./ops/systemd/big5quest.service ]; then
              sudo install -m 644 ./ops/systemd/big5quest.service /etc/systemd/system/big5quest.service
              sudo systemctl daemon-reload
              sudo systemctl enable big5quest || true
            fi

            # 3) root で .env を読む → preserve-env で ec2-user に渡す
            sudo -s <<'ROOT'
            set -euo pipefail
            cd /opt/Big5-Quest

            # .env 読み込み
            set -a
            source /etc/big5quest.env
            set +a

            # ec2-user としてアプリのセットアップ（環境を引き継ぐ）
            sudo --preserve-env=RAILS_ENV,SECRET_KEY_BASE,DB_HOST,DB_PORT,DB_NAME,DB_USERNAME,DB_PASSWORD,SENTRY_DSN,SENTRY_ENV \
              -u ec2-user bash <<'EC2'
            set -euo pipefail
            cd /opt/Big5-Quest
            export RAILS_ENV=production

            # Bundler が無ければ入れる（安全）
            if ! command -v bundle >/dev/null 2>&1; then
              sudo dnf -y install ruby rubygems rubygem-bundler || sudo gem install bundler -N
            fi

            echo "ruby:   $(ruby -v || true)"
            echo "bundle: $(bundle -v || true)"

            bundle config set without "development test"
            bundle config set path "vendor/bundle"
            bundle install --no-cache --jobs 3

            # Puma の binstub を用意（bin/puma で起動できるように）
            bundle binstubs puma --path=bin
            test -x bin/puma && echo "binstub: ok" || echo "binstub: missing"

            bin/rails db:migrate --trace
            EC2

            # 再起動
            systemctl restart big5quest
            sleep 1
            echo "== systemd status =="
            systemctl status --no-pager big5quest || true
            echo "== last 50 logs =="
            journalctl -u big5quest --no-pager -n 50 || true
            ROOT

            # 4) ヘルスチェック（nginx 経由）
            tries=30; ok=0
            for i in $(seq 1 $tries); do
              if curl -fsS -H "Host: api.big5-quest.com" -H "X-Forwarded-Proto: https" http://127.0.0.1:80/up >/dev/null; then
                echo "Health OK"; ok=1; break
              fi
              echo "Waiting app to boot... ($i/$tries)"
              sleep 2
            done
            if [ "$ok" -ne 1 ]; then
              echo "::error::Healthcheck failed. Dumping last 200 logs..."
              sudo journalctl -u big5quest --no-pager -n 200 || true
              sudo systemctl cat big5quest || true
              exit 1
            fi
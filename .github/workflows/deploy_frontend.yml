name: Deploy Frontend (S3 + CloudFront)

on:
  push:
    branches: [ main, chore/cd-frontend ]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy_frontend.yml'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install deps
        run: npm ci

      - name: Build (Vite)
        run: npm run build
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}

      - name: Sanity check: API URLs have /api prefix
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
        run: |
          set -euo pipefail
          BASE="${VITE_API_BASE_URL%/}"         # 例: https://api.big5-quest.com/api
          ROOT="${BASE%/api}"                   # 例: https://api.big5-quest.com
          GOOD="${BASE}/diagnosis_forms"        # 正: https://api.big5-quest.com/api/diagnosis_forms
          BAD="${ROOT}/diagnosis_forms"         # 誤: https://api.big5-quest.com/diagnosis_forms

          echo "Checking that no BAD URLs exist (without /api)…"
          if grep -RIl --binary-files=without-match -F "$BAD" dist; then
            echo "ERROR: /api なしのURLが dist に残っています: $BAD"
            grep -RIn --binary-files=without-match -F "$BAD" dist || true
            exit 1
          fi

          echo "Checking presence of GOOD URLs (with /api)…"
          if grep -RIn --binary-files=without-match -F "$GOOD" dist >/dev/null; then
            echo "OK: /api 付きURLのみが使われています"
          else
            echo "WARN: 期待する $GOOD が見つかりません。相対パス化の可能性があります。"
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sync static assets to S3 (except index.html)
        run: |
          aws s3 sync dist s3://${{ secrets.S3_BUCKET }} \
            --delete \
            --exclude "index.html" \
            --cache-control "public, max-age=31536000, immutable"

      - name: Upload index.html with no-cache
        run: |
          aws s3 cp dist/index.html s3://${{ secrets.S3_BUCKET }}/index.html \
            --cache-control "no-cache, no-store, must-revalidate" \
            --content-type "text/html"

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.DISTRIBUTION_ID }} \
            --paths "/index.html"